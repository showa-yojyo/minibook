======================================================================
Calc Guide Chapter 8 Using Formulas and Functions ノート
======================================================================

.. contents::
   :local:

Introduction
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

数式は数とテキストを評価するセルデータと考えられる。

Setting up a spreadsheet
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

オプションダイアログ内 :menuselection:`LibreOffice Calc --> View` 内
:guilabel:`Formula indicator and hint` をオンにしろ。これにより、数式を含むセル
の左下に小三角形が描かれ、ツールチップには数式が示される。数式バー非表示派の利用
者の使い勝手が向上する。

Creating formulas
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

数式を入力する方法：

* セルに対して直接入力
* Function Wizard を利用 (:menuselection:`&Insert --> &Function...` or
  :kbd:`Ctrl` + :kbd:`F2`)
* サイドバーの Functions を利用 (:kbd:`Alt` + :kbd:`5`)

意識したい演算子：

* 演算子 ``%`` は後置単項演算子として働く（意味は百分率）
* 不等式は ``<>`` を用いる
* 二項演算子 ``&`` は文字列連結演算
* セル指定のためのドットやコロン
* セル union 演算子 ``~``, e.g. ``A1:C3~B2:D2``
* セル intersection 演算子 ``!``, e.g. ``A2:B4 ! B3:D6``

相対参照と絶対参照について、これらの概念を理解しろ。セルのコピーやリンクに欠かせ
ない。参照様式を切り替えるのには :kbd:`F4` キーを使いこなせ。

セル自体を指すにはセルアドレスの他に名前を使える。セルや範囲に名前を付けること
で、数式の可読性と文書の保守性が向上する。名前を与える方法：

* :menuselection:`Sheet > &Named Ranges and Expressions > &Define...` コマンドを
  実行する。ダイアログで対象セル・範囲と名前を指示する。
* または、シートからセル・範囲を選択し、数式バーの左にある名前ボックスで名前を入
  力する。

このような名前の管理は :kbd:`Ctrl` + :kbd:`F3` 押しで開くダイアログで行う。

数式に名前をつけることも可能だ。

Understanding functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Calc が MS Excel のスプレッドシートを開くと、特定の関数で発生する非互換性を回避
する措置が自動的に働く。

関数は単体では存在できず、いつでも数式の部分である必要がある。

関数入力はサイドバーよりもウィザードのほうが使用頻度が高いらしい。

* ダイアログを開くのは :kbd:`Ctrl` + :kbd:`F2` 押しが早くて良い。
* :guilabel:`Structure` タブでは関数呼び出しの木構造が示される。

配列数式を理解しろ。配列式は一般に複数の値を同時に扱う。複数の値を処理できるだけ
でなく、複数の値を返すこともある。結果も配列になる。

* 配列式は計算式を一度評価し、配列のサイズと同じ回数だけ計算を実行するため、各セ
  ルの計算式を解釈する時間を節約できる。計算式自体の記憶領域節約にもなる。
* 配列として認識させるには :kbd:`Ctrl` + :kbd:`Shift` + :kbd:`Enter` 押しで確定
  する。
* Function Wizard を使用して配列式を作成する場合は、結果が配列で返されるように
  :guilabel:`Array` を毎回オンにしろ。

Strategies for creating formulas and functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

スプレッドシートを自分以外が使用する場合は特に、どこでどのような入力が必要である
かを容易に理解するように示せ。表計算シートの目的、入出力仕様は最初のシートに記載
することが多い。

分割統治法に則れ。数式を部分に分解し、それらを組み立てるように構えろ。

大量データを捌くために配列式を使え。理由は先述。

``SUM``, ``SUMIF``, ``SUMIFS``, ``SUMPRODUCT``, etc., コレクションに作用する関数
を優先的に使え。

Finding and fixing errors
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

数式とその数式が参照しているセルを調べるため、エラーメッセージ、入力の色分け、検
出各機能が用意されている。

数式のエラーメッセージは、通常 501 から 540 までの数、あるいは ``#NAME?`` エラー
メッセージの場合はセルに表示され、エラーの簡単な説明がステータスバーの右側に示さ
れる。

入力の色分けというのは、数式中のセル参照や範囲参照の文字列色のことを指す。出力に
も色分けがあり、字の並びとしては同一でも、型が異なる場合（例：数値とテキスト）を
見分けるときに有用だ。

セル参照の連鎖をたどるには :menuselection:`&Tools --> &Detective -->` 各種コマン
ドを実行する。これで矢印がシート内に描かれる。

* 対象セルにカーソルを置き :kbd:`Shift` + (:kbd:`F9` or :kbd:`F5`) を押すのが早
  い
* 矢印の向きが気に入らない
* 矢印を消去するには :menuselection:`&Tools --> &Detective --> Remove All
  Traces` コマンドを実行

知的余裕があれば :menuselection:`&Tools > &Detective > Trace &Error` の使い方を
習得しろ。

Examples of functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

初心者は算術、統計に区分されている関数から学べ。

* 名前が ``A`` で終わる関数は、値がテキストである場合に特別な処理をする
* ``ROUND`` 関数は呼び出し有無の比較を検討すると安心だ

Volatile / non-volatile functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Functions that are *always* recalculated whenever a recalculation occurs are
   termed :dfn:`volatile` functions.

例えば乱数生成関数やタイムスタンプ関数は揮発性だ。

シートを明示的に再計算する方法は：

* :menuselection:`&Data --> Ca&lculate --> &Recalculate` コマンドを実行
* :kbd:`F9` を押す

Using wildcards and regular expressions in functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

関数には、その実引数に正規表現またはワイルドカードを使用可能であるものがある。具
体例：

* 名前が ``D`` から始まるデータベース関数
* 平均値、勘定関数、最大値、最小値、和を得る各関数
* 表探索関数
* 当然ながら検索・置換関数

MS Excel はこのような正規表現を扱っていない。Calc 文書を変換して提出するような状
況では使用を避けろ。

設定ダイアログ :menuselection:`LibreOffice Calc --> Calculate` ページに関連設定
項目がある：

* :guilabel:`Formula Wildcards` ではワイルドカードのみが有効になっている
* :guilabel:`General Calculate` 項目の一部が正規表現の関係する動作に影響する。

Advanced functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Calc 文書はユーザー定義関数またはアドインによって機能拡張可能だ。

ユーザー定義関数は、マクロ (Chater 13) を使用するか、個別のアドインや拡張機能を
記述することで設定可能。マクロは Basic, BeanShell, JavaScript, Python のいずれか
で記述される。
