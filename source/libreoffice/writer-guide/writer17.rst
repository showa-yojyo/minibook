======================================================================
Writer Guide Chapter 17, Fields ノート
======================================================================

.. include:: ./abbrev.txt

.. contents:: 章見出し
   :depth: 3
   :local:

Introduction
======================================================================

フィールドは様々な目的で使用される。たとえば、変更されるデータ（現在の日付や総ページ数など）、または変更される可能性のあるデータ（開発中の製品や書籍の名前）、使用者定義の番号順、自動相互参照、条件付き中身（ある条件では表示または印刷されるが、他の条件では表示または印刷されない単語や段落）などだ。索引項目もフィールドだ。

この章では、フィールドの一般的な使い方をいくつか説明する。フィールドとその使用法についての完全な議論は本書の範囲を超えている。パワー使用者であれば、アプリケーションのヘルプに詳細がある。

.. tip::

   メニューの [表示] > [フィールドの影] を選択解除するか、[ツール] > [オプション] > [LibreOffice] > [アプリケーションの色] でフィールドの影の色を変更していない限り、フィールドの背景は画面表示時に灰色になる。この灰色の背景は、ファイルを印刷したり PDF にエクスポートしたりするときには表示されない。

Keyboard shortcuts for fields
----------------------------------------------------------------------

フィールドを操作するときに便利なキーボードショートカットをいくつかご紹介する：

.. list-table:: Frozen Delights!
   :header-rows: 1
   :widths: auto

.. csv-table::
   :delim: |
   :header: ,
   :widths: auto

   * * Keybind
     * Description
   * * :kbd:`Ctrl` + :kbd:`F2`
     * フィールドダイアログボックスを開く
   * * :kbd:`Ctrl` + :kbd:`F8`
     * フィールドシャディングのオンオフ
   * * :kbd:`Ctrl` + :kbd:`F9`
     * フィールド名を表示または非表示にする
   * * :kbd:`F9`
     * フィールドを更新する

Quick and easy field entry
======================================================================

一般的なフィールドを文書にすばやく挿入するには、メニューで「挿入」＞「ページ番号」または「挿入」＞「フィールド」を選択し、サブメニューで必要なフィールドを選択する。

Using document properties to hold metadata and information that changes
======================================================================

文書のプロパティダイアログボックス（ファイル > プロパティ）には六つのタブがある。全般」タブと「統計」タブの情報はプログラムによって生成される。一部の情報 (全般] タブの [作成] と [変更] の行の人名) は、[ツール] > [オプション] > [LibreOffice] の [使用者データ] ページから取得される。フォント] タブと [セキュリティー] タブのオプションについては、本書の他の箇所で説明する。

説明タブとカスタムプロパティタブを使用する：

* 文書の分類、並べ替え、保存、検索を支援するメタデータ。このメタデータの一部は、HTMLやPDFで最も近い等価物にエクスポートされる。
* 変更される情報。たとえば、文書の表題、プロジェクト参加者の連絡先、製品名などは、プロジェクトの過程で変更される可能性がある。

このダイアログボックスは雛形で使用することができ、フィールド名は書き手に含めるべき情報を思い出させる役割を果たする。(プレースホルダーはテキスト内でも同様の役割を果たすことができる。23ページ参照)。

いつでもこのダイアログボックスに戻り、入力した情報を変更することができる。そうすると、その情報への参照はすべて、文書内のどこに表示されていても変更される。例えば、「説明」タブ（図2）で、「表題」フィールドの内容をドラフト表題から本番表題に変更する必要があるかもしれない。

カスタムプロパティタブ（図3）は、このダイアログボックスの他のタブで提供されるフィールドに収まらない情報を保存するために使用する。

新しい文書で「カスタム プロパティ」タブを最初に開いたとき、空白の場合がある。新しい文書が雛形に基づいている場合、このタブにはフィールドが含まれることがある。

タブの右下にある「Add Property」ボタン（図には示されていない）をクリックすると、カスタムプロパティを入力できるボックスの列が挿入される。

* 名前」ボックスには、典型的な選択肢のドロップダウン一覧がある。スクロールダウンすると、すべての選択肢を見ることができる。
* Type]列では、各フィールドを[Text]、[DateTime]、[Date]、[Duration]、[Number]、[Yes]、[No]から選択できる。新しいタイプを作成することはできない。
* Value」列では、このフィールドが使用される文書に表示させたい内容を入力または選択する。例えば、Typeの選択がDateの場合、そのプロパティのValueはDateに限定される。

カスタムプロパティを削除するには、行の右端にあるボタンをクリックする。

.. tip::

   日付の値のフォーマットを変更するには、「ツール」>「オプション」>「言語設定」>「言語」と進み、「ロケール」の設定を変更する。

Using other fields to hold information that changes
======================================================================

人々がフィールドを使用する一つの方法は、プロジェクトの過程で変更される可能性のある情報を保持することだ。例えば、マネージャー名、製品名、あるいは会社全体が変更される可能性がある。変更可能な情報をフィールドとして挿入しておけば、ある場所で情報を変更すれば、そのフィールドが出現するすべての場所で自動的に変更される。

Writerには、フィールドが参照する情報を格納できる場所がいくつか用意されている。ここではそのいくつかを見ていきます。

7つの文書・プロパティ（ページ番号、ページ数、日付、時刻、表題、筆頭著者、件名）は、Insert > Fieldメニューにある（図1）。これらのフィールドを挿入するには、メニューでそのフィールドをクリックする。これらのフィールドのいくつかは、文書・プロパティ・ダイアログボックス（図2）から情報を取得する。

その他の文書・プロパティは、「フィールド」ダイアログボックスの「DocInformation」タブと「Document」タブにあり（図4と図5）、「挿入」→「フィールド」→「その他のフィールド」を選択するか、Ctrl+F2を押すことで表示される。

DocInformation」タブの「Type」一覧にある「Custom」項目は、「Document Properties」ダイアログボックス（図3）の「Custom Properties」タブから派生したものだ。

フィールドの値のいくつかは、[ツール] > [オプション] > [LibreOffice] ダイアログボックスの [使用者データ] ページから取得される。

これらのフィールドを挿入するには、[タイプ] 一覧でフィールドを選択し、[選択] および [書式] 一覧でフィールドを選択する。最後に、[挿入] をクリックする。

.. tip::

   内容を固定にするには、フィールドを挿入するときに「内容を固定」（図4右下参照）を選択する。必要であれば、後でこのダイアログボックスに戻って、フィールドを再び可変にするためにこのオプションの選択を解除しろ。例えば、文書の作成日を挿入するフィールドを使用する場合、その日付を変更させたくないとする。

Using AutoText to insert often-used fields
======================================================================

同じフィールドを頻繁に使用する場合は、オートテキストを使用すると、すばやく簡単にフィールドを挿入できる。

フィールドにオートテキスト項目を定義するには

#. 前述のように、文書にフィールドを挿入する。
#. 挿入したフィールドを選択し、ツール > オートテキストを選択する（または Ctrl+F3 を押する）。
#. オートテキストダイアログボックス (図 6) で、この新しいエントリを保存するグループ (この例では My AutoText) を選択し、エントリの名前を入力し、必要に応じて推奨されるショートカットを変更する。
#. 「AutoText」ボタンをクリックし、「New」をクリックして項目をフィールドとして挿入する。オートテキストの項目はフィールドではなくプレーンテキストになるので、「新規（テキストのみ）」は選択するな。(グループを選択し、エントリーの名前を入力するまで、「新規」選択は表示されない)。
#. 閉じるをクリックしてオートテキストダイアログボックスを閉じる。

このフィールドをキャレット位置に挿入するには、ショートカットを入力し、F3キーを押する。

Defining your own numbering sequences
======================================================================

常に段落の先頭に番号を付けたいわけではない場合や、組み込みの番号付けの選択肢よりもコントロールしたい場合、一覧スタイルでは思い通りにならない場合などに、独自の番号付けシーケンスを定義して使用したい場合がある。

このトピックでは、番号範囲変数フィールドを使用して、番号付けシーケンスを作成する方法について説明する。

アラビア数字（1 2 3）を使って数値範囲変数を作成するには

#. キャレットを文書内の空白の段落に置く。
#. Insert > Field > More Fields を選択するか、Ctrl+F2 を押して、Variables タブを選択する（図 7）。
#. Type 一覧で Number range を選択する。Format 一覧で、Arabic (1 2 3)を選択する。Name フィールドに好きな名前を入力する。(この例では Step を使っている)。
#. Insert をクリックする。変数名（Step）が選択一覧に表示され、数値フィールド（1を表示）が文書の挿入ポイントに表示される。Fieldsダイアログボックスは開いたままだ。
#. FieldsダイアログボックスのInsertボタンをさらに何回かクリックすると、2、3、4...と数字が文書に表示される。
#. これで、挿入したフィールドを削除することができる。[フィールド]ダイアログボックスの[選択]ボックスには、[ステップシーケンス]が残ります（この文書のみ）。このフィールドは文書内の任意の場所に挿入できる。

.. tip::

   Step番号を入力するたびにこのような作業をするのを避けるには、Stepのオートテキストエントリーを作成する。そうすれば、他のオートテキストを挿入するのと同じ方法でフィールドを挿入できる。7ページの「オートテキストを使ってよく使うフィールドを挿入する」を参照。

.. tip::

   使用者定義変数が文書で使用されていない場合、Valueボックスの隣にあるX図像がアクティブになる。この図像をクリックすると、変数を削除することができる。現在の文書で使用されている変数を削除するには、まずその変数を使用しているすべてのフィールドを文書から削除し、それから一覧から変数を削除する。

Using automatic cross-references
======================================================================

文書の他の部分への相互参照を入力した場合、見出しの文言を変更したり、図表を追加または削除したり、トピックを再編成したりすると、それらの参照は簡単に古くなってしまいる。入力した相互参照を自動参照に置き換えると、すべての参照は自動的に更新され、現在の文言またはページ/図/表番号が表示される。

フィールド] ダイアログボックス (図 8) の [相互参照] タブには、見出し、段落番号、しおりなど、いくつかの項目が表示される。図のキャプション、表のキャプション、使用者定義の数値範囲変数、その他いくつかの項目が文書で定義されている場合、そのタイプも一覧に表示される。

必要な項目に表示される単語や語句を知っている場合、選択ボックスに表示される項目の一覧を短くすることができる。

.. tip::

   相互参照にWriterのハイパーリンク機能を使う人がいる。しかし、リンク先のアイテムのテキストを変更しても、ハイパーリンクの表示テキストは変更されない。そのため、ほとんどの場面で相互参照を使用することをお勧めする。相互参照はHTML文書ではハイパーリンクにならないので、Writer文書ではハイパーリンクを使用する必要がある。

Inserting cross-references
----------------------------------------------------------------------

相互参照タブに表示されている見出し、図、その他の項目に相互参照を 挿入するには

#. キャレットを文書内の相互参照を表示したい場所に置く。
#. Fields ダイアログボックスが開いていない場合は、Insert > Cross-reference を選択するか、Ctrl+F2 を押する。相互参照］タブ（図8）の［タイプ］一覧で、参照する項目のタイプ（見出しや図など）をクリックする。
#. 選択一覧で必要な項目をクリックする。この一覧には、自動的に作成された項目 (見出しなど) と、使用者定義の参照 (しおりなど) の両方が表示される。
#. Refer using 一覧で、必要な参照のタイプを選択する。選択肢は参照する項目によって異なる (後述の「相互参照の形式」を参照)。
#. Insert をクリックする。

Formats for cross-references
----------------------------------------------------------------------

すべてのタイプの相互参照について、以下のフォーマットから選択することができる：

* ページ番号（スタイルなし）：ページスタイルで指定された書式を使用しない、対象のページ番号。
* 章：参照された対象がある章の番号。
* 参照テキスト：参照またはしおりとして設定された全文。
* Above"/"Below"：参照される対象に対するフィールドの相対的な位置に応じて、上または下の単語。
* ページ番号（スタイル付き）：ページスタイルで指定された書式を使用した、対象のページ番号。これは、通常ローマ数字が使用されるフロントマターでページへの参照を置くときに非常に便利だ。

見出しや段落番号には、さらに三つのオプションがある：

* 番号：見出しまたは番号付き段落の番号を、文脈に応じて上位レベルも含めて挿入する（以下の例を参照）。
* 番号(文脈なし): 見出しまたは番号付き段落の番号のみを挿入する。例えば、番号付けされた項目2.4を参照する場合、4が挿入される。
* 番号（フルコンテキスト）：上位の階層レベルを含む、完全な番号を挿入する。例えば、番号の付いた項目2.4を参照する場合、完全な番号（2.4）が挿入される。

表や図など、キャプションとともに挿入されるオブジェクトの場合は、次のように選択することもできる：

* 区分と番号：参照されるオブジェクトの区分と番号の両方を挿入する（例：Figure 6）。これは図や表で最も使用されるフォーマットだ。
* Caption Text: 参照オブジェクトの完全なキャプションを挿入する。例えば、Figure 6: これは図の例だ。
* 番号付け：参照されるオブジェクトの連番を、区分を除いて挿入する（例えば、表 2 を参照する場合、フィールドには番号 2 のみが含まれる）。

Example of cross-referencing to numbered headings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

第1章第2節第5節では、見出しに1.2.5と番号を付けることができる。前のサブパート(1.2.4)のテキストに含まれる参照は、Number書式を使うと4と表示される。もし番号がより多くのサブレベルを表示するように設定されていれば、同じ参照は設定によって2.4または1.2.4と表示される。Number（フルコンテキスト）フォーマットを使用すると、numberiがどのようにフォーマットされていても、常に1.2.4と表示される。

Preparing items as targets for cross-referencing
----------------------------------------------------------------------

相互参照タブに自動的に表示されないもの、例えばキャプションのないイラストや箇条書き一覧の項目などに相互参照を挿入したい場合は、まず参照先となる項目を用意する必要がある。これを行うには、しおりを使用するか、参照を設定する。対象が定義されたら、10ページの「相互参照の挿入」の説明に従って相互参照することができる。

.. note::

   しおりとセット参照の両方が、場所またはテキストのいずれにも使用できるようになりました。以前のバージョンの LibreOffice では、しおりは位置参照にのみ使用できました。

Using bookmarks
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

しおりはナビゲーターに一覧表示され、そこから直接アクセスできる。HTML文書では、しおりはハイパーリンクを使ってジャンプできるアンカーに変換される。

しおりの名前の変更や編集など、しおりの詳細については15ページの「しおりの管理」を参照しろ。

#. しおりしたいテキストを選択するか、テキスト内の必要な場所をクリックする。メニューの［挿入］＞［しおり］を選択する。
#. ［しおり］ダイアログボックス（図16）で、大きい方のボックスに、以前に定義したしおりが一覧表示される。一番上のボックスに新しいしおりの名前を入力し（または既定の名前を受け入れる）、「挿入」をクリックする。
#. さらにしおりを挿入する間、しおりダイアログボックスを開いたままにしておくことができる。終わったら、「閉じる」をクリックする。

Setting references
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

セット参照は、フィールドダイアログボックスの相互参照タブで挿入・管理される。

#. しおりしたいテキストを選択するか、テキスト内の必要な場所をクリックする。メニューの［挿入］＞［相互参照］を選択する。
#. ［フィールド］ダイアログボックスの［相互参照］タブで（図 9）、［タイプ］ 一覧から［参照の設定］を選択する。選択一覧には、定義済みの参照が表示される。複数の項目を参照に設定する間、このダイアログボックスは開いたままにできる。
#. ダイアログボックス右下の値ボックスに項目のテキストが表示される。Name ボックスに、この項目を識別できるテキストを入力する。このフィールド名は大文字と小文字を区別する。
#. Insert をクリックする。名前］ボックスに入力したテキストが［選択一覧］に表示される。
#. ステップ 3 と 4 を必要なだけ繰り返する。
#. 閉じるをクリックして保存し、ダイアログボックスを閉じる。

Cross-referencing between subdocuments
======================================================================

マスター文書のサブ文書間の相互参照を自動的に更新したい場合がある。このトピックでは、セット参照を使用する方法について説明する。しおりを使用する場合も手順は同様だ。

Preparing the references
----------------------------------------------------------------------

相互参照の対象となるすべての項目について、1一ページの「相互参照の対象となる項目を準備する」で説明した手順に従ってください。この場合、見出し、図のキャプション、その他の項目は、一つの文書内の項目のように自動的に一覧されないので、含める必要がある。

.. tip::

   参照フィールドの名前を一覧アップし、一つの文書内だけでなく、関連するすべての文書で、それぞれの名前が一意であることを確認しろ。この情報を管理する一つの方法は、別のファイルやスプレッドシートに保存することだ。

   フィールド名は大文字と小文字を区別する。フィールド名は、参照する項目にマウスポインタを合わせると確認できる。例えば、図10では見出しにword countというフィールド名がある。

Inserting the cross-references
----------------------------------------------------------------------

#. 文書内で、相互参照を表示したい場所にキャレットを置きます。挿入(Insert)] > [相互参照(Cross Reference)] をクリックする。
#. ［フィールド］ダイアログボックス（図 11）の［相互参照］タブで、左側の［タイプ］ 一覧から［参照の挿入］を選択する。Refer using］一覧で［Referenced text］を選択する。
#. 右側のSelection一覧には、使用しているサブ文書の参照フィールド名（もしあれば）のみが表示されているので、その一覧は無視して、上記の「参照の準備」で手動で作成した一覧を確認しろ。右下の Name フィールドに、参照するサブ文書に設定したリファレンスの名前を入力する。この例では、参照名は word count だ。
#. [挿入]をクリックし、参照とページ番号の間に表示したいテキスト（"ページ上" など）を入力し、[参照]一覧にページ番号（スタイルなし）で別の参照を挿入する。相互参照は図12のようにエラーを表示する。これらのフィールドの上にマウスポインタを置くと、フィールド名が表示される。

   (表示 > フィールド名 をクリックして、フィールドコードの表示をオンにすることができる。図12に示した二つのエラー・フィールドは、図13のように表示される)。
#. サブ文書に必要な相互参照をすべて挿入したら、［閉じる］ をクリックして保存し、マスター文書のウィンドウに戻る。
#. メニューの［ツール］>［更新］>［リンク］を選択するか、ナビゲーターの［更新］>［リンク］をクリックする。マスター文書の編集内容がすべて表示される。マスター文書内で、相互参照フィールドを挿入したサブ文書のページに移動する。

これで、挿入した場所に相互参照のテキストが表示されるはずだ。うまくいかない場合は、マスター文書を保存して閉じ、リンクを更新しながらもう一度開いてください。(編集のためにサブ文書を開くと、図12のエラーメッセージが表示される)。

このテクニックは、ステップ2でサブ文書を直接開き(つまりマスター文書内からではなく)、相互参照フィールドを挿入する場合にも有効だ。

Using fields in headers and footers
======================================================================

You can insert fields into headers or footers, using techniques described earlier in this chapter:

* ページ番号、文書表題、作成者、作成日時、現在日時、または総ページ数フィールドを挿入するには、「文書プロパティ」（4ページ参照）を使用するか、メニューで「挿入」＞「フィールド」＞「[項目]」を選択する。
* しおり、見出し、その他の項目への相互参照を挿入するには、「挿入」→「相互参照」または「挿入」→「フィールド」→「その他のフィールド」→「相互参照」を使用する。
* 見出し1が章表題に使われている場合、文書フィールドを使って現在の章表題を挿入し、ヘッダーやフッターの内容が章ごとに変わるようにする。図15を見てください。(見出し1にアウトライン番号が使用されている場合、これらの番号をフィールドに含めるかどうかを選択する（見出し番号と内容）。挿入」＞「フィールド」＞「その他のフィールド」＞「文書」を使用する。
* 他の見出しレベルとの相互参照を挿入するには、[フィールド]ダイアログボックスの[文書]タブ右下の[レベルまで]ボックスで値を指定する（図15）。つまり、レベル1 = 見出し1、レベル2 = 見出し2、といった具合だ。

.. note::

   ページのヘッダ内の相互参照フィールドは、そのページのそのレベルの最初の見出しをピックアップする。フッターのフィールドは、そのページのそのレベルの最後の見出しをピックアップする。

フッターにページ数を追加できる（例：1二ページ中9ページ目）。Pageフィールドの前にPageという単語とスペースを入力する。Pageフィールドの後にスペース、ofという単語、スペースを入力する。次に、「挿入」＞「フィールド」＞「ページ数」を選択する。

章番号をページ番号に含めるには

#. 挿入したページフィールドの直前にキャレットを置く。フィールド」ダイアログボックスの「文書」タブで、「タイプ」列で「章」を選択し、「フォーマット」列で「セパレータなしの章番号」を選択する。挿入をクリックする。
#. このフィールドを挿入したヘッダーまたはフッターに移動し、章番号とページ番号の間に表示したい文字を入力する。
#. 目次はこれらの章番号を自動的にピックアップしないので、第15章目次、索引、書誌で説明するように、目次、索引、書誌ダイアログボックスの［項目］タブで変更する必要がある。

Managing bookmarks
======================================================================

しおりは位置参照にもテキスト参照にも使えます。

しおりで囲まれたテキストは、文書自体だけでなく、しおりダイアログボックス（図16）でも編集できる。ダイアログボックスでテキストを編集すると、文書でも編集される。変更追跡をオンにしている場合、変更は文書内で追跡される。

しおりダイアログボックスを使ってしおりのテキストを編集するには

#. ナビゲータのしおり一覧を開き、しおり名を右クリックし、コンテキストメニューから編集を選択する。しおりダイアログボックスがそのしおりを選択した状態で開く。ダイアログボックスが開いている間は、一覧内のどのしおりでも選択できる。
#. 必要なしおりを選択した状態で、テキストの編集ボタンをクリックする。選択したしおりのテキストがテキスト欄でハイライトされる。
#. ダイアログボックスでハイライトされたテキストをクリックして編集する。終わったら閉じるをクリックする。

しおりの名前を編集するには、ナビゲーターでしおりを右クリックし、コンテキストメニューから「名前の変更」を選択するか、しおりダイアログボックスでしおりを選択し、「名前の変更」ボタンをクリックする。小さなダイアログボックスが開く。新しい名前を入力するか、既存の名前を編集し、OKをクリックして保存する。

文書内のしおりを探すには、ナビゲータでしおりを右クリックし、コンテキストメニューから「移動」を選択するか、しおりダイアログボックスでしおりを選択し、「移動」ボタンをクリックする。キャレットがしおりの場所にジャンプし、しおりがハイライトされる。

その他のしおり機能強化は、メタデータの可視化、アクセシビリティ、文書内のしおり位置の可視化だ。これらの機能の詳細については、リリースノート、https://wiki.documentfoundation.org/ReleaseNotes/7.5#Bookmarks をご覧ください。

Developing conditional content
======================================================================

条件付き中身とは、指定した条件によって文書に含まれたり含まれなかったりするテキストや画像のことだ。

簡単な例としては、延滞した口座の督促状がある。最初の督促状と2回目の督促状には「督促状通知」という件名が付くかもしれないが、3回目の督促状には「最終通知」という件名が付き、最終段落が異なるかもしれない。

もっと複雑な例としては、Pro版とLite版の2種類がある製品のソフトウェアマニュアルがある。両バージョンの製品には多くの共通点があるが、ProバージョンにはLiteバージョンにはない機能がある。条件付き中身を使用すれば、両方のバージョンの情報を含む一つのファイルを管理し、それぞれのバージョン用にカスタマイズした印刷（またはオンラインヘルプの作成）を行うことができる。両方のバージョンで同じ情報を2セット管理する必要がないので、何か変更があったときに両方のバージョンを更新し忘れることがなくなる。

.. tip::

   場合によっては、段落や文字のスタイルを非表示にすることで、同じ効果を得ることができる。

Choose the types of conditional content to use
----------------------------------------------------------------------

このトピックでは、条件付き中身の設計と維持に役立ついくつかの Writer 機能について説明する。これらの機能は、1 つの文書で 1 つまたは任意の組み合わせで使用できる。

Conditional text
   条件付きテキストでは、二つの代替テキスト（単語、フレーズ、文）を指定できる。一方のテキストは指定した条件を満たした場合に表示・印刷され、もう一方は条件を満たさなかった場合に表示・印刷される。フィールドダイアログボックス以外では、画像を入れたり、テキストを編集したりすることはできない（文書本文ではできない）。また、テキストの一部を書式設定することはできないが（例えば、ある単語を太字にし、他の単語を太字にしないなど）、フィールドの内容すべてに影響を与える書式設定をすることはできる（例えば、すべての単語を太字や斜体にするなど）。テキストに相互参照や他のフィールドを含めることはできない。
Hidden text
   隠しテキスト（単語、フレーズ、文）では、表示か非表示かの2択しかない。指定した条件を満たせばテキストは非表示になり、条件を満たさなければテキストは表示される。欠点は条件付きテキストと同じで、画像を含められないこと、本文のテキストを編集できないこと、テキストの一部をフォーマットできないこと、フィールドを含められないことだ。
Hidden paragraphs
   非表示段落は他の段落と同様だが、段落を表示または印刷しない条件を指定できる。画像を含めたり、本文のテキストを編集したり、テキストの任意の部分をフォーマットしたり、フィールドを含めたりすることができる。

   例えば、データベースフィールドに現在のレコードの内容がない場合、空白の段落を非表示にすることもできる。これは、住所を手紙にマージするときに便利だ。住所に2行を許可していて、データベースレコードが1行しか使用していない場合、空白行が文書に表示されるのを防ぐことができる。
Hidden sections
   隠しセクションは隠し段落のようなものだが、見出しと一つ以上の段落など、複数の段落を含むことができる。ただし、セクションに段落未満の内容を含めることはできないので、 単語や語句にこの方法を使用することはできない。非表示セクションの内容は、文書の他の部分の内容と同じように動作するが、セクションを表示または印刷しない条件を指定することができる。さらに、セクションをパスワードで保護することもできる。

Plan your conditional content
----------------------------------------------------------------------

条件とは、プログラマーが論理式と呼ぶものである。条件は常に真（満たされている）か偽（満たされていない）のどちらかであるため、条件ごとに論理式を作成する必要がある。文書内のさまざまな場所で、さまざまなタイプの条件付き中身に同じ条件を使用することができる。

条件付き中身を動作させるには、変数を選択または定義し、選択した変数に関係する論理式（条件）を定義する必要がある。

Choose or define a variable
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

条件では以下の変数を使用できる：

* 使用者定義変数
* 文書プロパティの統計値を使用する定義済みの LibreOffice 変数
* 使用者データ
* データベースフィールドの内容 (アドレス帳など)

条件では、内部変数 (ページ番号や章名など) を使用できない。

Define a logical expression (condition) involving the variable
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

条件は、指定された固定値と変数またはデータベース・フィールドの内容を比較する。

演算子、数学関数、統計関数、数値書式、変数、定数などだ。使用可能な演算子や多くの使用例はヘルプに記載されている。非常に複雑な式を定義することもできるが、ほとんどの場合は単純な条件で十分だ。

Create the variable
----------------------------------------------------------------------

変数を作成するには、Fields ダイアログボックスの DocInformation、Variables、Database タブにある選択肢を使用する。

DocInformation fields
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

4 ページの「文書プロパティを使ってメタデータと変更情報を保持」では、カスタム文書プロパティを設定する方法を説明した。その文書プロパティを、条件文の変数として使用することができる。

User-defined variable field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

変数または使用者フィールドを設定するには

1) フィールドを挿入したい場所にキャレットを置く。
2) Fields ダイアログボックスで Variables タブを選択する（図 17）。
3) Type 一覧で Set variable を選択し、Format 一覧で Text を選択する。Nameボックスに変数の名前を、Valueボックスに値を入力する。この例では、名前にProLiteが選ばれ（この変数が二つの製品バージョンに関連していることを思い出させるため）、値には "Liteバージョンであれば、このテキストは非表示にする "ことを忘れないためにLiteが設定されている。
4) 文書にフィールドが表示されないように、「不可視」を選択する。挿入]をクリックし、[閉じる]をクリックする。フィールドを挿入した場所に小さな灰色のマークが表示される。

.. tip::

   灰色のマークはとても小さいので、特に文書内に他のフィールドがある場合、再度見つけるのに苦労するかもしれない。作業中は変数フィールドを表示したままにしておき、最終的なコピーを作成する直前に非表示に変更するのがよいだろう。

   いつでも挿入点をフィールドの直前に置き、Edit > Fieldsを選択するか、フィールドを右クリックしてコンテキストメニューからFieldsを選択することができる。フィールドの編集」ダイアログボックス（図22）で、「不可視」を選択または選択解除する。

Apply the condition to the content
----------------------------------------------------------------------

変数を定義したら、それを条件文の中で使うことができる。このトピックでは、いくつかの可能性について説明する。

Conditional text
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

まず、マニュアルのLite版にはGreat Product Lite、Pro版にはGreat Product Proという言葉を挿入する条件テキストを設定しろ。このフィールドは、製品名を記載したいときに使用する。

#. キャレットをこれらのフレーズのいずれかを表示させたい場所に置く。(キャレットは後で移動または削除することができる）。
#. Fields ダイアログボックスの Functions タブで、Type 一覧から Conditional text を選択する。
#. 図 18 に示すように、Condition ボックスに ProLite EQ "Lite"、Then ボックスに Great Product Lite、Else ボックスに Great Product Pro と入力する。

   .. note::

      これらのフィールドでは大文字と小文字が区別され、Liteのようなテキスト値の周りには引用符が必要だ。
#. 挿入]をクリックしてフィールドを挿入し、[閉じる]をクリックする。テキストにGreat Product Liteが表示されるはずだ。

.. tip::

   このフィールドをテキストに挿入する場所が多い場合（商品名など）、オートテキスト項目を作成しろ。手順については、7ページの「オートテキストを使ってよく使うフィールドを挿入する」を参照しろ。

Hidden text
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

隠しテキストは、Lite版にはないGreat Product Proの機能を説明する単語や短いフレーズに使用できる。コピーして貼り付けるなどして、文書内の複数の場所で同じフィールドを再利用できる。隠しテキストフィールドを作成するには

#. Fields ダイアログボックスの Functions タブで、Type 一覧から Hidden text を選択する（図 19）。
#. 条件ボックスに「ProLite EQ "Lite"」と入力し、隠しテキストボックスに必要なテキストを入力する。これは条件が真の場合に非表示になるテキストだ。
#. Insert をクリックしてフィールドを作成し、挿入する。

非表示のテキストをすべて表示して編集できるようにするには、次のいずれかを実行する：

* ツール] > [オプション] > [LibreOffice Writer] > [表示] ページで、[フィールドを表示] を選択する：ツール] > [オプション] > [LibOffice Writer] > [表示] ページで、[表示フィールド: 隠しテキスト] オプションを選択する。
* テキストを非表示にする条件を定義するために使用した変数の前をダブルクリックし、変数に別の値を入力する。

Hidden paragraphs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

条件付きの段落は、その条件が真の場合に非表示になる。段落を非表示にするには

#. 非表示にする段落をクリックする。
#. ［フィールド］ダイアログボックスの［機能］タブ（図 20）で、［タイプ］一覧で［非表示段落］を選択する。
#. この例では、条件ボックスに ProLite EQ "Lite" と入力する。
#. Insert をクリックしてフィールドを作成し、挿入する。

非表示の段落をすべて表示して編集できるようにするには、次のいずれかを実行する：

* メニューの [表示] > [フィールド非表示の段落] を選択する。
* ツール] > [オプション] > [LibreOffice Writer] > [表示] ページで、[フィールドの表示] を選択する：非表示の段落] オプションを選択する。
* 段落を非表示にする条件を定義するために使用した変数の前をダブルクリックし、変数に別の値を入力する。

Hidden sections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

条件付きセクションは、条件が真の場合、非表示になる。条件付きセクションを作成するには

#. 条件付きセクションに含めたいテキストを選択する。(このテキストは、他のテキストと同じように後で編集できる)。
#. [挿入] > [セクション] を選択する。セクションの挿入ダイアログボックス (図 21) で、セクションタブを開き、非表示を選択して、条件付きボックスに条件を入力する。セクションに名前を付けることもできる。これは、文書に複数のセクションがある場合に、簡単にセクションを見つけることができるようにするため、強くお勧めする。
#. 挿入をクリックして、セクションを文書に挿入する。

非表示のセクションを表示して編集できるようにするには

#. 書式 > セクションを選択する。
#. セクションの編集ダイアログボックスで、一覧からセクションを選択する。
#. Hideの選択を解除し、OKをクリックする。これでセクションの内容を編集できるようになる。その後、「書式」→「セクション」を選択し、「非表示」を選択すると、再びセクションを非表示にすることができる。

非表示のセクションを文書の通常の一部にする（つまり、セクションマーカーは削除するが、セクションの内容は削除しない）：

#. 上記のように、非表示のセクションを表示する。
#. セクションの編集ダイアログボックスで、一覧からセクションを選択する。
#. 削除をクリックする。セクションの内容は、文書の通常の部分となる。

Change the value of the variable
----------------------------------------------------------------------

Lite と Pro の間で変数の値を変更するには：

#. 17 ページの「変数の選択または定義」で作成した変数フィールドを見つける。
#. このフィールドのすぐ前を一度クリックし、右クリックしてコンテキストメニューの Fields をクリックする。
#. Edit Fields ダイアログボックス（図 22）で、変数の値を Pro に変更する。
#. フィールドを自動的に更新するように設定している場合は、この変数を条件として使用している条件付きテキストと隠しテキストがすべて変更される。

.. note::

   条件付きテキストと隠しテキストは、「フィールドの編集」ダイアログボックスでのみ編集できる。

.. tip::

   フィールドの自動更新を有効にするには、[ツール] > [オプション] > [LibreOffice Writer] > [全般] を選択し、[自動更新] の [フィールド] を選択する。

Using placeholder fields
======================================================================

プレースホルダ・フィールドは、何か（テキスト、表、枠、画像、オブジェクト）の入力を促すものだ。

プレースホルダ・フィールドを文書に挿入するには

#. ［フィールド］ダイアログボックスの［機能］タブで、［タイプ］欄で［プレースホルダ］を選択し、［書式］欄でプレースホルダの用途を選択する。
#. プレースホルダーボックスに、プレースホルダーフィールドに表示したいテキストを入力する。
#. ［参照］ボックスに、マウスポインタをフィールド上に置いたときにヘルプチップとして表示させたいテキストを入力する。

Figure 23 shows the results of inserting a placeholder field for an image.

<ロゴ>フィールドは画像プレースホルダなので、文書内でそのフィールドをクリックすると、画像の挿入ダイアログボックスが開き、画像を選択するよう促される。画像を選択して「開く」をクリックすると、画像は文書内のフィールドに置き換わります。

同様に、テーブル・プレースホルダ・フィールドをクリックすると「テーブルの挿入」ダイアログボックスが開き、枠・プレースホルダ・フィールドをクリックすると「枠」ダイアログボックスが開き、オブジェクト・プレースホルダ・フィールドをクリックすると「OLEオブジェクトの挿入」ダイアログボックスが開く。テキスト・プレースホルダ・フィールドは、単にそれをクリックし、プレースホルダ・ボックスにテキストを入力するだけで、フィールドが置き換わります。

Using other fields
======================================================================

データベースフィールド、フォームフィールド、中身コントロールなど、フィールドのその他の使用方法については、この文書のさまざまな章で説明する。

LibreOffice には、他にも便利なフィールドが多数用意されているが、専門的すぎて本書では紹介しきれない。詳細、説明、例については、ヘルプを参照しろ。

Classifying document contents
======================================================================

文書の分類とセキュリティーは、企業や政府にとって重要である。使用者や組織の間で機密情報が交換される場合、そのような情報がどのように識別され、どのように取り扱われるかについて、当事者間で合意する必要がある。LibreOffice は、機密情報を保持するための一連の標準フィールドを使用して、機密情報を識別および保護するための標準化された手段を提供する。

LibreOffice には、TSCP（Transglobal Secure Collaboration Participation, Inc）が作成したオープンスタンダードが実装されている。これには三つのBAF（Business Authentication Framework）カテゴリが含まれている：知的財産、国家安全保障、輸出管理だ。各区分には、4 つの BAILS（Business Authorization Identification and Labeling Scheme）レベルがある：非ビジネス、一般ビジネス、機密、内部のみ。

文書の分類を有効にするには、TSCPバー（［表示］＞［ツールバー］＞［TSCP分類］）を開く。このツールバーには、文書のセキュリティーの選択に役立つ一覧ボックスが含まれている。次に、LibreOffice は、文書のプロパティ (「ファイル」>「プロパティ」>「カスタムプロパティ」タブ) にカスタムフィールドを追加し、分類ポリシーを文書のメタデータとして保存する。

セキュリティーポリシーの違反を防ぐため、高い分類レベルの中身を低い分類レベルの文書に貼り付けることはできない。
